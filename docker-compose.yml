version: '1.0'

services:
  app:
    container_name: hiresmart-backend
    build: .
    ports:
      - '8080:8080'
    env_file:
      - .env
    depends_on:
      - postgres
      - redis
    volumes:
      - .:/app
    command: npm run start:dev
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:8080/health']
      interval: 30s
      timeout: 10s
      retries: 5

  postgres:
    image: postgres:15
    container_name: hiresmart-db
    restart: always
    ports:
      - '5432:5432'
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: hiresmart
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7
    container_name: hiresmart-cache
    ports:
      - '6379:6379'
    volumes:
      - redisdata:/data
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 10s
      timeout: 5s
      retries: 5

  pgadmin:
    image: dpage/pgadmin4
    container_name: hiresmart-pgadmin
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@hiresmart.dev
      PGADMIN_DEFAULT_PASSWORD: admin123
    ports:
      - '5050:80'
    depends_on:
      - postgres

volumes:
  pgdata:
  redisdata:
